import * as fsp from 'node:fs/promises';

import { BloomFilter } from '@intrnl/bloom-filter';

console.log('fetching list of TLDs');
const response = await fetch('https://data.iana.org/TLD/tlds-alpha-by-domain.txt');

if (!response.ok) {
	throw new Error(`got response ${response.status}`);
}

const text = await response.text();

const tlds = [];

for (const line of text.split('\n')) {
	if (line.startsWith('#')) {
		continue;
	}

	if (line.startsWith('XN--')) {
		continue;
	}

	const tld = line.toLowerCase();
	tlds.push(tld);
}

console.log(`generating bloom filter`);

const { size, hashes } = BloomFilter.getOptimalSize(tlds.length, 0.01);
const bloom = BloomFilter.create(size, hashes);

for (const tld of tlds) {
	BloomFilter.add(bloom, tld);
}

const json = JSON.stringify(BloomFilter.toJSON(bloom));

let mod = `// This file is automatically generated, do not edit!
// Updating this bloom filter can be done by running the generate-tld-bloom.js script

import { BloomFilter } from '@intrnl/bloom-filter';

let bloom: BloomFilter.BloomFilter;

export const hasTld = (tld: string) => {
	if (!bloom) {
		// prettier-ignore
		bloom = BloomFilter.fromJSON(${json});
	}

	return BloomFilter.has(bloom, tld);
};
`;

fsp.writeFile('./src/lib/tlds/index.ts', mod);
